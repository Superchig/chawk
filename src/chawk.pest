Program = { SOI ~ ((PatternBlock ~ Separator) | PatternBlock | Separator)* ~ EOI }

Separator = _{ NEWLINE }

PatternBlock = { (Pattern ~ Block) | Pattern | Block }

Pattern = @{ "/" ~ (!"/" ~ ANY)* ~ "/" }

// NOTE(Chris): We explicitly allow for a newline after the opening curly
// bracket to avoid putting the newline directly into the implicit whitespace
// rule. We exclude newline from the implicit whitespace rule because we want
// the newline to actually matter in some non-atomic rules.
Block = { 
    "{"
    ~ (
	Statement ~ Separator{0, 1}
	| (WHITESPACE* ~ NEWLINE)
    )*
    ~ "}"
}

Statement = { PrintStatement | AssignStatement }
PrintStatement = { "print" ~ Expression }
AssignStatement = { Id ~ "=" ~ Expression }

Expression = { Expression2 }
Expression1 = { Atom ~ ((PlusSign | MinusSign) ~ Atom)* }
PlusSign = { "+" }
MinusSign = { "-" }
Expression2 = { Expression1 ~ ((TimesSign | DivSign) ~ Expression1)* }
TimesSign = { "*" }
DivSign = { "/" }
Atom = { String | ColumnNumber | VarLookup | "(" ~ Expression ~ ")" }
String = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
ColumnNumber = @{ "$" ~ Integer }
VarLookup = { Id }

Integer = ${ ASCII_DIGIT+ }

Id = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

WHITESPACE = _{ " " | "\t" }

COMMENT = _{ "#" ~ (!"\n" ~ ANY)* ~ NEWLINE }
